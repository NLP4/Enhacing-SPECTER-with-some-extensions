{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "83c9c7885b0a44ceb897b7543cbc53bd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_1d2562899ea245cc8f4fabe387c3ca74",
              "IPY_MODEL_6df2ac08dfeb4029a04b4a28a489cecd",
              "IPY_MODEL_8020c21e836b4983b5b0c0a06487b021"
            ],
            "layout": "IPY_MODEL_96278756e86e46429f9ca3296180a0ee"
          }
        },
        "1d2562899ea245cc8f4fabe387c3ca74": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d59298a381cf4e7391478e282be4a830",
            "placeholder": "​",
            "style": "IPY_MODEL_9e69f46f3fee4491a59aabda33d7b2c9",
            "value": "Downloading (…)okenizer_config.json: 100%"
          }
        },
        "6df2ac08dfeb4029a04b4a28a489cecd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d7ad21fc18b749beaf0d194d0770b3f2",
            "max": 321,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_18659943aae74b7788c1f11af824f79a",
            "value": 321
          }
        },
        "8020c21e836b4983b5b0c0a06487b021": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_86882eb3256b4f719f864d9a5abe15f9",
            "placeholder": "​",
            "style": "IPY_MODEL_6de81d7533c942109124d117f8ee09f1",
            "value": " 321/321 [00:00&lt;00:00, 6.74kB/s]"
          }
        },
        "96278756e86e46429f9ca3296180a0ee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d59298a381cf4e7391478e282be4a830": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9e69f46f3fee4491a59aabda33d7b2c9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "d7ad21fc18b749beaf0d194d0770b3f2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "18659943aae74b7788c1f11af824f79a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "86882eb3256b4f719f864d9a5abe15f9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6de81d7533c942109124d117f8ee09f1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e6966a682027406fba619131929ea705": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_1cc27991a5d94528a9de649205ee8438",
              "IPY_MODEL_ee432c35914e4eb1af08dc33232f9367",
              "IPY_MODEL_030141e7421546e2a80a606403649b54"
            ],
            "layout": "IPY_MODEL_6c0e08a796c94c00a3399b3fca6c7088"
          }
        },
        "1cc27991a5d94528a9de649205ee8438": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_da54f540e61a4728a9636c5f0e990712",
            "placeholder": "​",
            "style": "IPY_MODEL_e80d4b09469e436ab7e706231b9b5551",
            "value": "Downloading (…)lve/main/config.json: 100%"
          }
        },
        "ee432c35914e4eb1af08dc33232f9367": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f654a750f81e48ad8c75f0b598b1dce9",
            "max": 612,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_729964e28b964fadbbe8e3f091656b8e",
            "value": 612
          }
        },
        "030141e7421546e2a80a606403649b54": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_c872585e8a054da8bd39c6ac6c030931",
            "placeholder": "​",
            "style": "IPY_MODEL_98af7d174c554dbebae6c2d1be95010e",
            "value": " 612/612 [00:00&lt;00:00, 13.2kB/s]"
          }
        },
        "6c0e08a796c94c00a3399b3fca6c7088": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "da54f540e61a4728a9636c5f0e990712": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e80d4b09469e436ab7e706231b9b5551": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f654a750f81e48ad8c75f0b598b1dce9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "729964e28b964fadbbe8e3f091656b8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "c872585e8a054da8bd39c6ac6c030931": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "98af7d174c554dbebae6c2d1be95010e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "61b12c7238a6492b865b6e4183dba4d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_4a86c3a1dfa54afb810c7b8079749dd9",
              "IPY_MODEL_ba1446ad6f9e41acb37808710febf15c",
              "IPY_MODEL_847b46749c514c5287b2318b5bdd8da0"
            ],
            "layout": "IPY_MODEL_f303ccd81f9242e6abf2371c3c6012bf"
          }
        },
        "4a86c3a1dfa54afb810c7b8079749dd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_933cae9e183f4d9899117e0c13818357",
            "placeholder": "​",
            "style": "IPY_MODEL_af30767e5ead4179aa4289ac548fab12",
            "value": "Downloading (…)solve/main/vocab.txt: 100%"
          }
        },
        "ba1446ad6f9e41acb37808710febf15c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_3d6f12a886814dbbadaf881e7fe2d3d4",
            "max": 222296,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_cc859872e9cd48648ff3edc4629fbe5f",
            "value": 222296
          }
        },
        "847b46749c514c5287b2318b5bdd8da0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_030054667c364e66b76679bdafbede45",
            "placeholder": "​",
            "style": "IPY_MODEL_7b777b1d536b4ab2aabf69cc00c14013",
            "value": " 222k/222k [00:00&lt;00:00, 2.91MB/s]"
          }
        },
        "f303ccd81f9242e6abf2371c3c6012bf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "933cae9e183f4d9899117e0c13818357": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "af30767e5ead4179aa4289ac548fab12": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "3d6f12a886814dbbadaf881e7fe2d3d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cc859872e9cd48648ff3edc4629fbe5f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "030054667c364e66b76679bdafbede45": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7b777b1d536b4ab2aabf69cc00c14013": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1e889f4f070d4e84b4560729afa8852b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_48909c358155482685e3b3c2ce076cbc",
              "IPY_MODEL_aebb6f696f064b09972c24974a19e177",
              "IPY_MODEL_e46935c5fcb045698f41e81dcb7f3a51"
            ],
            "layout": "IPY_MODEL_8ac9444e711c47f786251aeaa80a7003"
          }
        },
        "48909c358155482685e3b3c2ce076cbc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_b743684fea264a8fb0de4f67ef26715d",
            "placeholder": "​",
            "style": "IPY_MODEL_bf889913e95c4195bf146b4e2da5d72b",
            "value": "Downloading (…)cial_tokens_map.json: 100%"
          }
        },
        "aebb6f696f064b09972c24974a19e177": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0be8a9c5a2da4859b1ee0a2167ffdbbf",
            "max": 112,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_9d79fd61c4e940d1ae25d43af1b320a1",
            "value": 112
          }
        },
        "e46935c5fcb045698f41e81dcb7f3a51": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e38c1f8ad6a24faea12fe12f733b85af",
            "placeholder": "​",
            "style": "IPY_MODEL_6881a0a1938c4d89925f23e8593422e4",
            "value": " 112/112 [00:00&lt;00:00, 3.48kB/s]"
          }
        },
        "8ac9444e711c47f786251aeaa80a7003": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b743684fea264a8fb0de4f67ef26715d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bf889913e95c4195bf146b4e2da5d72b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0be8a9c5a2da4859b1ee0a2167ffdbbf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9d79fd61c4e940d1ae25d43af1b320a1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "e38c1f8ad6a24faea12fe12f733b85af": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6881a0a1938c4d89925f23e8593422e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "923064b09d1b433faa2f96f7f8ec49e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_cf8c36244b8944c8958f6499ab26cc67",
              "IPY_MODEL_a2b8899b32cb4e09b5cb4cca2edf8cb2",
              "IPY_MODEL_aff8f42f3d844fa298c5def5319bc554"
            ],
            "layout": "IPY_MODEL_2362105e614541b48070885132276d5a"
          }
        },
        "cf8c36244b8944c8958f6499ab26cc67": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_3414a82b15214463a7487505fa251d8d",
            "placeholder": "​",
            "style": "IPY_MODEL_66c6b4526a3a4bb1805643b5a4d6df72",
            "value": "Downloading pytorch_model.bin: 100%"
          }
        },
        "a2b8899b32cb4e09b5cb4cca2edf8cb2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_02d888dcbd4b447db97b3939f4048d4d",
            "max": 439803023,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_e36fd1453c364c259faf0bcc0e1fff4d",
            "value": 439803023
          }
        },
        "aff8f42f3d844fa298c5def5319bc554": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_1eadc74befd74c7b8d5d6a1159de5892",
            "placeholder": "​",
            "style": "IPY_MODEL_ebdd0e6791d84a808b919a3ff5598cac",
            "value": " 440M/440M [00:04&lt;00:00, 115MB/s]"
          }
        },
        "2362105e614541b48070885132276d5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3414a82b15214463a7487505fa251d8d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "66c6b4526a3a4bb1805643b5a4d6df72": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "02d888dcbd4b447db97b3939f4048d4d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e36fd1453c364c259faf0bcc0e1fff4d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "1eadc74befd74c7b8d5d6a1159de5892": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ebdd0e6791d84a808b919a3ff5598cac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/NLP4/Enhacing-SPECTER-with-some-extensions/blob/main/Date_%2B_Classification.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fCssKfkGwvUZ",
        "outputId": "64549b1c-fa53-473e-88e4-4295beeb15b4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'specter'...\n",
            "remote: Enumerating objects: 195, done.\u001b[K\n",
            "remote: Counting objects: 100% (120/120), done.\u001b[K\n",
            "remote: Compressing objects: 100% (61/61), done.\u001b[K\n",
            "remote: Total 195 (delta 80), reused 70 (delta 59), pack-reused 75\u001b[K\n",
            "Receiving objects: 100% (195/195), 316.53 KiB | 3.48 MiB/s, done.\n",
            "Resolving deltas: 100% (96/96), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/allenai/specter.git"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget https://ai2-s2-research-public.s3-us-west-2.amazonaws.com/specter/archive.tar.gz"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hHFSFvUjwyJJ",
        "outputId": "65b95785-3356-412a-a87a-6e61aeeb0b6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-04-23 20:19:31--  https://ai2-s2-research-public.s3-us-west-2.amazonaws.com/specter/archive.tar.gz\n",
            "Resolving ai2-s2-research-public.s3-us-west-2.amazonaws.com (ai2-s2-research-public.s3-us-west-2.amazonaws.com)... 52.218.178.178, 52.92.192.178, 3.5.86.182, ...\n",
            "Connecting to ai2-s2-research-public.s3-us-west-2.amazonaws.com (ai2-s2-research-public.s3-us-west-2.amazonaws.com)|52.218.178.178|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 873742818 (833M) [application/x-tar]\n",
            "Saving to: ‘archive.tar.gz’\n",
            "\n",
            "archive.tar.gz      100%[===================>] 833.27M  42.8MB/s    in 20s     \n",
            "\n",
            "2023-04-23 20:19:51 (42.1 MB/s) - ‘archive.tar.gz’ saved [873742818/873742818]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "`Download the dataset `\n",
        "\n"
      ],
      "metadata": {
        "id": "ROC9DQhrxRJV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install -U -q kaggle\n",
        "!mkdir -p ~/.kaggle\n",
        "!echo '{\"username\":\"oumaimaregragui\",\"key\":\"98f2ff74d27102ab393ebb934d047f83\"}' > ~/.kaggle/kaggle.json\n",
        "!chmod 600 ~/.kaggle/kaggle.json\n",
        "!kaggle datasets download -d dillonpulliam/cord19cleaneddata"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w4dNAmY0w0tJ",
        "outputId": "a6f27719-9b24-4e88-ce1f-ae75519b929d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading cord19cleaneddata.zip to /content\n",
            " 98% 595M/608M [00:06<00:00, 106MB/s] \n",
            "100% 608M/608M [00:06<00:00, 103MB/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip cord19cleaneddata.zip"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TkHJmF6sw2xC",
        "outputId": "ceefff5c-efda-4a89-fcf2-4fce40ae3db4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  cord19cleaneddata.zip\n",
            "  inflating: covidData.csv           \n",
            "  inflating: covidDataCleaned.csv    \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import pickle\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.tokenize import word_tokenize\n",
        "from nltk.stem.wordnet import WordNetLemmatizer"
      ],
      "metadata": {
        "id": "GGw4feztw6fi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "metadata_path = '/content/covidDataCleaned.csv'\n",
        "meta_df = pd.read_csv(metadata_path, dtype={'doi': str})"
      ],
      "metadata": {
        "id": "slJ8CRQVw8bF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "meta_df = meta_df[['paper_id','abstract','body_text','title','authors','journal','url']].reset_index(drop=True)"
      ],
      "metadata": {
        "id": "R6eUErR6xCg8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install transformers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dgrAZxBWxCkJ",
        "outputId": "a233d323-60f4-4f9e-b0ae-1566e7b05414"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting transformers\n",
            "  Downloading transformers-4.28.1-py3-none-any.whl (7.0 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.0/7.0 MB\u001b[0m \u001b[31m47.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting huggingface-hub<1.0,>=0.11.0\n",
            "  Downloading huggingface_hub-0.13.4-py3-none-any.whl (200 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m200.1/200.1 kB\u001b[0m \u001b[31m21.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.9/dist-packages (from transformers) (4.65.0)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from transformers) (3.11.0)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from transformers) (23.1)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.9/dist-packages (from transformers) (6.0)\n",
            "Collecting tokenizers!=0.11.3,<0.14,>=0.11.1\n",
            "  Downloading tokenizers-0.13.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.8/7.8 MB\u001b[0m \u001b[31m76.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.9/dist-packages (from transformers) (2.27.1)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.9/dist-packages (from transformers) (2022.10.31)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.9/dist-packages (from transformers) (1.22.4)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.9/dist-packages (from huggingface-hub<1.0,>=0.11.0->transformers) (4.5.0)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (1.26.15)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (2.0.12)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (2022.12.7)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (3.4)\n",
            "Installing collected packages: tokenizers, huggingface-hub, transformers\n",
            "Successfully installed huggingface-hub-0.13.4 tokenizers-0.13.3 transformers-4.28.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Creating the date column by extracting the date from the abstract "
      ],
      "metadata": {
        "id": "2A7Io40Gxucb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import re\n",
        "import numpy as np\n",
        "import spacy\n",
        "\n",
        "# Load the spaCy model\n",
        "nlp = spacy.load(\"en_core_web_sm\")\n",
        "\n",
        "# Define a regular expression to match dates\n",
        "date_regex = re.compile(r\"\\d{4}\")\n",
        "\n",
        "# Create a new column for the date\n",
        "meta_df[\"date\"] = \"\"\n",
        "\n",
        "# Process each abstract and extract the date\n",
        "for i, abstract in enumerate(meta_df[\"abstract\"]):\n",
        "    if isinstance(abstract, float) and np.isnan(abstract):\n",
        "        abstract = \"\"\n",
        "    doc = nlp(abstract)\n",
        "    for token in doc:\n",
        "        if token.pos_ == \"NUM\" and date_regex.match(token.text):\n",
        "            date = token.text\n",
        "            break\n",
        "    else:\n",
        "        date = \"\"\n",
        "    \n",
        "    # Store the extracted date in the date column\n",
        "    meta_df.at[i, \"date\"] = date if isinstance(date, str) else str(date)"
      ],
      "metadata": {
        "id": "-jq1eSEoxCoA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(meta_df.index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z8n4fjxl2F2N",
        "outputId": "f879c0f9-c6f4-47a0-9d50-7b3ebb713ca5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "28008"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "meta_df = meta_df[meta_df['date'].notnull() & (meta_df['date'] > '2018') & (meta_df['date'] < '2024')]"
      ],
      "metadata": {
        "id": "yVZpeLE4xCq9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(meta_df.index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vxs967xZ2Bh1",
        "outputId": "5b162ae6-2d59-408a-89dc-2ea0c635db92"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "547"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "meta_df.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "swhzL5eAxKmd",
        "outputId": "d59d9ada-d8f5-4b98-d495-bc207d83764e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                      paper_id  \\\n",
              "109   7037460cc980744603573744bf370ee8f49a4ffe   \n",
              "130   46bf124930f3ef18bc9dd2d4ae356a45d3bae461   \n",
              "140   983df610328c1e73e3c12546d42a14d520844f9b   \n",
              "226   4bbb0c59babc718f67953fae032dad6ae0d7aeb1   \n",
              "238   3061f05203159384dfbb2fd9b1d9a1ca7b98c8a6   \n",
              "352   66b67940ae16f657fd93fad230081d20d98c55f7   \n",
              "438   077a70059a89059bace1150d779cc911a2229c60   \n",
              "647   6dfe2e77c8175b3eb38d6fc3ccc440fb81a0e2f0   \n",
              "859   e52ecf4b22e9dcb340ccf67f0251b5a3f9373f02   \n",
              "1030  9a27c99f125072894ab9db357b4ff8858a11203d   \n",
              "1063  a3e8cfc509af101c522d4193c8917d6e8f68b37b   \n",
              "1097  e8f1edfb8249017f774ccc05dea2ab17be144313   \n",
              "1239  3fd78b99422f68e7283d6ea864732a9d195bb35a   \n",
              "1257  ebfc471829e1303889bd23779d1c2ffb9467ab7e   \n",
              "1387  e9457327ddb51cf3ceb3698660ff08f526a09d44   \n",
              "1447  a67012609fad77c2a1dc55f139b044c546cd13a8   \n",
              "1500  606233835c3d6d195b7d230745ccb0fded626aa7   \n",
              "1622  d10f84b9e2232aef0a3d90771b3f861208456d2d   \n",
              "1632  1dd7096290bcbcc5aa830706c5396155ef51bd39   \n",
              "1660  7aaffdb8cf80ab9dd167a26a44abfa21d30d2af5   \n",
              "\n",
              "                                               abstract  \\\n",
              "109   Objectives The aim of this study was to determ...   \n",
              "130   Objective: This study presents a preliminary r...   \n",
              "140   How to cite: Bhuiyan ZA, Ali MZ, Moula MM, Bar...   \n",
              "226   Genome Detective is a web-based, user-friendly...   \n",
              "238   Introduction: The earthquake is one of the mos...   \n",
              "352   In December 2019, several patients with pneumo...   \n",
              "438   within the receptor binding domain (RBD) of th...   \n",
              "647   With the spread of novel coronavirus (2019-nCo...   \n",
              "859   Purpose: This study represents the current epi...   \n",
              "1030  As of February 2020, severe acute respiratory ...   \n",
              "1063  OBJECTIVE To study the clinical characteristic...   \n",
              "1097  Upon viral infection, the 2', 5'-oligoadenylat...   \n",
              "1239  S (2020). Malaria in China: a longitudinal pop...   \n",
              "1257  Background: A novel coronavirus (2019-nCoV) ca...   \n",
              "1387  Background: Since early December 2019, the 201...   \n",
              "1447  Background: Human infections with zoonotic cor...   \n",
              "1500  The ongoing new coronavirus pneumonia (Corona ...   \n",
              "1622  Frontiers in Microbiology | www.frontiersin.or...   \n",
              "1632  Both antiseptic hand rubbing (AHR) using ethan...   \n",
              "1660  Middle East respiratory syndrome coronavirus (...   \n",
              "\n",
              "                                              body_text  \\\n",
              "109   Drugs that inhibit virus replication have beco...   \n",
              "130   https://doi.org/10.3348/kjr.2020.0132 kjronlin...   \n",
              "140   The poultry industry is an important subsector...   \n",
              "226   We are currently faced with a potential global...   \n",
              "238   Over the past 10 years, natural disasters have...   \n",
              "352   In December 2019, several patients with pneumo...   \n",
              "438   Middle East respiratory syndrome coronavirus (...   \n",
              "647   The newly discovered novel coronavirus (2019-n...   \n",
              "859   Human coronaviruses (hCoV) usually causes mild...   \n",
              "1030  values of rRT-PCR was converted into RNA copy ...   \n",
              "1063  In December 2019 a group of patients with pneu...   \n",
              "1097  During infection with RNA viruses, germline-en...   \n",
              "1239  Malaria is a life-threatening disease caused b...   \n",
              "1257  In late 2019, Wuhan in Hubei province, China b...   \n",
              "1387  Since December 2019, unexplained pneumonia has...   \n",
              "1447  Coronaviruses (CoVs) are enveloped viruses wit...   \n",
              "1500  Emerging infectious diseases are a major chall...   \n",
              "1622  Rhinoviruses (RVs) are increasingly implicated...   \n",
              "1632  P revention of influenza A virus (IAV) transmi...   \n",
              "1660  Middle East respiratory syndrome coronavirus (...   \n",
              "\n",
              "                                                  title  \\\n",
              "109   Efficacy and safety of the nucleoside analog G...   \n",
              "130   Chest Radiographic and CT Findings of the 2019...   \n",
              "140   Seroprevalence of major avian respiratory dise...   \n",
              "226   Genome Detective Coronavirus Typing Tool for r...   \n",
              "238   Iranian Emergency Medical Service Response in ...   \n",
              "352   A precision medicine approach to managing Wuha...   \n",
              "438   Generation and characterization of a monoclona...   \n",
              "647   HRCT Imaging Features in Representative Import...   \n",
              "859   Epidemiological status of the Middle East resp...   \n",
              "1030  Viral Load Kinetics of SARS-CoV-2 Infection in...   \n",
              "1063  Clinical findings in a group of patients infec...   \n",
              "1097  OAS1 and OAS3 negatively regulate the expressi...   \n",
              "1239  Malaria in China: a longitudinal population-ba...   \n",
              "1257  Clinical characteristics of novel coronavirus ...   \n",
              "1387  Analysis of factors associated with disease ou...   \n",
              "1447  Identification of a novel coronavirus causing ...   \n",
              "1500  Distribution of the COVID-19 epidemic and corr...   \n",
              "1622  The Emerging Role of Rhinoviruses in Lower Res...   \n",
              "1632  Situations Leading to Reduced Effectiveness of...   \n",
              "1660  Superior immune responses induced by intranasa...   \n",
              "\n",
              "                                                authors  \\\n",
              "109   Pedersen, Niels C; Perron, Michel; Bannasch, M...   \n",
              "130   Yoon, Soon Ho; Lee, Kyung Hee; Kim, Jin Yong; ...   \n",
              "140   Bhuiyan, Zafar Ahmed; Ali, Md Zulfekar; Moula,...   \n",
              "226   Cleemput, S.; Dumon, W.; Fonseca, V.; Karim, W...   \n",
              "238   Saberian, Peyman; Kolivand, Pir-Hossein; Hasan...   \n",
              "352   Minjin Wang, Yanbing Zhou, Zhiyong Zong, Zonga...   \n",
              "438   Park, Byoung Kwon; Maharjan, Sony; Lee, Su In;...   \n",
              "647   Diao, Kaiyue; Han, Peilun; Pang, Tong; Li, Yua...   \n",
              "859                 Ahmadzadeh, Jamal; Mobaraki, Kazhal   \n",
              "1030  Kim, Jin Yong; Ko, Jae-Hoon; Kim, Yeonjae; Kim...   \n",
              "1063  Xu, Xiao-Wei; Wu, Xiao-Xin; Jiang, Xian-Gao; X...   \n",
              "1097  Lee, Wook-Bin; Choi, Won Young; Lee, Dong-Hyun...   \n",
              "1239  Ding, Cheng; Huang, Chenyang; Zhou, Yuqing; Fu...   \n",
              "1257  Kui, Liu; Fang, Yuan-Yuan; Deng, Yan; Liu, Wei...   \n",
              "1387  Liu, Wei; Tao, Zhao-Wu; Lei, Wang; Ming-Li, Yu...   \n",
              "1447  Ren, L. L.; Wang, Y. M.; Wu, Z. Q.; Xiang, Z. ...   \n",
              "1500  Chen, Ze-Liang; Zhang, Qi; Lu, Yi; Guo, Zhong-...   \n",
              "1622  Ljubin-Sternak, Sunčanica; Meštrović, Tomislav...   \n",
              "1632  Hirose, Ryohei; Nakaya, Takaaki; Naito, Yuji; ...   \n",
              "1660          Kim, Myung Hee; Kim, Hyun Jik; Chang, Jun   \n",
              "\n",
              "                               journal  \\\n",
              "109                  J Feline Med Surg   \n",
              "130                    Korean J Radiol   \n",
              "140                 J Adv Vet Anim Res   \n",
              "226   Bioinformatics (Oxford, England)   \n",
              "238                    Adv J Emerg Med   \n",
              "352        Precision Clinical Medicine   \n",
              "438                            BMB Rep   \n",
              "647        Precision Clinical Medicine   \n",
              "859                      Int J Gen Med   \n",
              "1030                  J Korean Med Sci   \n",
              "1063                               BMJ   \n",
              "1097                           BMB Rep   \n",
              "1239                               NaN   \n",
              "1257                 Chin Med J (Engl)   \n",
              "1387                 Chin Med J (Engl)   \n",
              "1447           Chinese medical journal   \n",
              "1500                 Chin Med J (Engl)   \n",
              "1622                   Front Microbiol   \n",
              "1632                           mSphere   \n",
              "1660                          PLoS One   \n",
              "\n",
              "                                                    url      date  \n",
              "109   https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "130               https://doi.org/10.3348/kjr.2020.0132      2019  \n",
              "140   https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "226      https://doi.org/10.1093/bioinformatics/btaa145      2019  \n",
              "238   https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...  2019;3(2  \n",
              "352              https://doi.org/10.1093/pcmedi/pbaa002      2019  \n",
              "438   https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "647              https://doi.org/10.1093/pcmedi/pbaa004      2019  \n",
              "859   https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "1030  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7...      2020  \n",
              "1063                   https://doi.org/10.1136/bmj.m606      2019  \n",
              "1097  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "1239  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7...      2020  \n",
              "1257       https://doi.org/10.1097/cm9.0000000000000744      2019  \n",
              "1387       https://doi.org/10.1097/cm9.0000000000000775      2019  \n",
              "1447       https://doi.org/10.1097/cm9.0000000000000722      2019  \n",
              "1500       https://doi.org/10.1097/cm9.0000000000000782      2019  \n",
              "1622  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "1632  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  \n",
              "1660  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c629fbb3-dbf8-49ac-bf25-24892851b42b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>paper_id</th>\n",
              "      <th>abstract</th>\n",
              "      <th>body_text</th>\n",
              "      <th>title</th>\n",
              "      <th>authors</th>\n",
              "      <th>journal</th>\n",
              "      <th>url</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>7037460cc980744603573744bf370ee8f49a4ffe</td>\n",
              "      <td>Objectives The aim of this study was to determ...</td>\n",
              "      <td>Drugs that inhibit virus replication have beco...</td>\n",
              "      <td>Efficacy and safety of the nucleoside analog G...</td>\n",
              "      <td>Pedersen, Niels C; Perron, Michel; Bannasch, M...</td>\n",
              "      <td>J Feline Med Surg</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>46bf124930f3ef18bc9dd2d4ae356a45d3bae461</td>\n",
              "      <td>Objective: This study presents a preliminary r...</td>\n",
              "      <td>https://doi.org/10.3348/kjr.2020.0132 kjronlin...</td>\n",
              "      <td>Chest Radiographic and CT Findings of the 2019...</td>\n",
              "      <td>Yoon, Soon Ho; Lee, Kyung Hee; Kim, Jin Yong; ...</td>\n",
              "      <td>Korean J Radiol</td>\n",
              "      <td>https://doi.org/10.3348/kjr.2020.0132</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>983df610328c1e73e3c12546d42a14d520844f9b</td>\n",
              "      <td>How to cite: Bhuiyan ZA, Ali MZ, Moula MM, Bar...</td>\n",
              "      <td>The poultry industry is an important subsector...</td>\n",
              "      <td>Seroprevalence of major avian respiratory dise...</td>\n",
              "      <td>Bhuiyan, Zafar Ahmed; Ali, Md Zulfekar; Moula,...</td>\n",
              "      <td>J Adv Vet Anim Res</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>4bbb0c59babc718f67953fae032dad6ae0d7aeb1</td>\n",
              "      <td>Genome Detective is a web-based, user-friendly...</td>\n",
              "      <td>We are currently faced with a potential global...</td>\n",
              "      <td>Genome Detective Coronavirus Typing Tool for r...</td>\n",
              "      <td>Cleemput, S.; Dumon, W.; Fonseca, V.; Karim, W...</td>\n",
              "      <td>Bioinformatics (Oxford, England)</td>\n",
              "      <td>https://doi.org/10.1093/bioinformatics/btaa145</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>3061f05203159384dfbb2fd9b1d9a1ca7b98c8a6</td>\n",
              "      <td>Introduction: The earthquake is one of the mos...</td>\n",
              "      <td>Over the past 10 years, natural disasters have...</td>\n",
              "      <td>Iranian Emergency Medical Service Response in ...</td>\n",
              "      <td>Saberian, Peyman; Kolivand, Pir-Hossein; Hasan...</td>\n",
              "      <td>Adv J Emerg Med</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019;3(2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>66b67940ae16f657fd93fad230081d20d98c55f7</td>\n",
              "      <td>In December 2019, several patients with pneumo...</td>\n",
              "      <td>In December 2019, several patients with pneumo...</td>\n",
              "      <td>A precision medicine approach to managing Wuha...</td>\n",
              "      <td>Minjin Wang, Yanbing Zhou, Zhiyong Zong, Zonga...</td>\n",
              "      <td>Precision Clinical Medicine</td>\n",
              "      <td>https://doi.org/10.1093/pcmedi/pbaa002</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>077a70059a89059bace1150d779cc911a2229c60</td>\n",
              "      <td>within the receptor binding domain (RBD) of th...</td>\n",
              "      <td>Middle East respiratory syndrome coronavirus (...</td>\n",
              "      <td>Generation and characterization of a monoclona...</td>\n",
              "      <td>Park, Byoung Kwon; Maharjan, Sony; Lee, Su In;...</td>\n",
              "      <td>BMB Rep</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>647</th>\n",
              "      <td>6dfe2e77c8175b3eb38d6fc3ccc440fb81a0e2f0</td>\n",
              "      <td>With the spread of novel coronavirus (2019-nCo...</td>\n",
              "      <td>The newly discovered novel coronavirus (2019-n...</td>\n",
              "      <td>HRCT Imaging Features in Representative Import...</td>\n",
              "      <td>Diao, Kaiyue; Han, Peilun; Pang, Tong; Li, Yua...</td>\n",
              "      <td>Precision Clinical Medicine</td>\n",
              "      <td>https://doi.org/10.1093/pcmedi/pbaa004</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>859</th>\n",
              "      <td>e52ecf4b22e9dcb340ccf67f0251b5a3f9373f02</td>\n",
              "      <td>Purpose: This study represents the current epi...</td>\n",
              "      <td>Human coronaviruses (hCoV) usually causes mild...</td>\n",
              "      <td>Epidemiological status of the Middle East resp...</td>\n",
              "      <td>Ahmadzadeh, Jamal; Mobaraki, Kazhal</td>\n",
              "      <td>Int J Gen Med</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1030</th>\n",
              "      <td>9a27c99f125072894ab9db357b4ff8858a11203d</td>\n",
              "      <td>As of February 2020, severe acute respiratory ...</td>\n",
              "      <td>values of rRT-PCR was converted into RNA copy ...</td>\n",
              "      <td>Viral Load Kinetics of SARS-CoV-2 Infection in...</td>\n",
              "      <td>Kim, Jin Yong; Ko, Jae-Hoon; Kim, Yeonjae; Kim...</td>\n",
              "      <td>J Korean Med Sci</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7...</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1063</th>\n",
              "      <td>a3e8cfc509af101c522d4193c8917d6e8f68b37b</td>\n",
              "      <td>OBJECTIVE To study the clinical characteristic...</td>\n",
              "      <td>In December 2019 a group of patients with pneu...</td>\n",
              "      <td>Clinical findings in a group of patients infec...</td>\n",
              "      <td>Xu, Xiao-Wei; Wu, Xiao-Xin; Jiang, Xian-Gao; X...</td>\n",
              "      <td>BMJ</td>\n",
              "      <td>https://doi.org/10.1136/bmj.m606</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1097</th>\n",
              "      <td>e8f1edfb8249017f774ccc05dea2ab17be144313</td>\n",
              "      <td>Upon viral infection, the 2', 5'-oligoadenylat...</td>\n",
              "      <td>During infection with RNA viruses, germline-en...</td>\n",
              "      <td>OAS1 and OAS3 negatively regulate the expressi...</td>\n",
              "      <td>Lee, Wook-Bin; Choi, Won Young; Lee, Dong-Hyun...</td>\n",
              "      <td>BMB Rep</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1239</th>\n",
              "      <td>3fd78b99422f68e7283d6ea864732a9d195bb35a</td>\n",
              "      <td>S (2020). Malaria in China: a longitudinal pop...</td>\n",
              "      <td>Malaria is a life-threatening disease caused b...</td>\n",
              "      <td>Malaria in China: a longitudinal population-ba...</td>\n",
              "      <td>Ding, Cheng; Huang, Chenyang; Zhou, Yuqing; Fu...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7...</td>\n",
              "      <td>2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1257</th>\n",
              "      <td>ebfc471829e1303889bd23779d1c2ffb9467ab7e</td>\n",
              "      <td>Background: A novel coronavirus (2019-nCoV) ca...</td>\n",
              "      <td>In late 2019, Wuhan in Hubei province, China b...</td>\n",
              "      <td>Clinical characteristics of novel coronavirus ...</td>\n",
              "      <td>Kui, Liu; Fang, Yuan-Yuan; Deng, Yan; Liu, Wei...</td>\n",
              "      <td>Chin Med J (Engl)</td>\n",
              "      <td>https://doi.org/10.1097/cm9.0000000000000744</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1387</th>\n",
              "      <td>e9457327ddb51cf3ceb3698660ff08f526a09d44</td>\n",
              "      <td>Background: Since early December 2019, the 201...</td>\n",
              "      <td>Since December 2019, unexplained pneumonia has...</td>\n",
              "      <td>Analysis of factors associated with disease ou...</td>\n",
              "      <td>Liu, Wei; Tao, Zhao-Wu; Lei, Wang; Ming-Li, Yu...</td>\n",
              "      <td>Chin Med J (Engl)</td>\n",
              "      <td>https://doi.org/10.1097/cm9.0000000000000775</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1447</th>\n",
              "      <td>a67012609fad77c2a1dc55f139b044c546cd13a8</td>\n",
              "      <td>Background: Human infections with zoonotic cor...</td>\n",
              "      <td>Coronaviruses (CoVs) are enveloped viruses wit...</td>\n",
              "      <td>Identification of a novel coronavirus causing ...</td>\n",
              "      <td>Ren, L. L.; Wang, Y. M.; Wu, Z. Q.; Xiang, Z. ...</td>\n",
              "      <td>Chinese medical journal</td>\n",
              "      <td>https://doi.org/10.1097/cm9.0000000000000722</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1500</th>\n",
              "      <td>606233835c3d6d195b7d230745ccb0fded626aa7</td>\n",
              "      <td>The ongoing new coronavirus pneumonia (Corona ...</td>\n",
              "      <td>Emerging infectious diseases are a major chall...</td>\n",
              "      <td>Distribution of the COVID-19 epidemic and corr...</td>\n",
              "      <td>Chen, Ze-Liang; Zhang, Qi; Lu, Yi; Guo, Zhong-...</td>\n",
              "      <td>Chin Med J (Engl)</td>\n",
              "      <td>https://doi.org/10.1097/cm9.0000000000000782</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1622</th>\n",
              "      <td>d10f84b9e2232aef0a3d90771b3f861208456d2d</td>\n",
              "      <td>Frontiers in Microbiology | www.frontiersin.or...</td>\n",
              "      <td>Rhinoviruses (RVs) are increasingly implicated...</td>\n",
              "      <td>The Emerging Role of Rhinoviruses in Lower Res...</td>\n",
              "      <td>Ljubin-Sternak, Sunčanica; Meštrović, Tomislav...</td>\n",
              "      <td>Front Microbiol</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1632</th>\n",
              "      <td>1dd7096290bcbcc5aa830706c5396155ef51bd39</td>\n",
              "      <td>Both antiseptic hand rubbing (AHR) using ethan...</td>\n",
              "      <td>P revention of influenza A virus (IAV) transmi...</td>\n",
              "      <td>Situations Leading to Reduced Effectiveness of...</td>\n",
              "      <td>Hirose, Ryohei; Nakaya, Takaaki; Naito, Yuji; ...</td>\n",
              "      <td>mSphere</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1660</th>\n",
              "      <td>7aaffdb8cf80ab9dd167a26a44abfa21d30d2af5</td>\n",
              "      <td>Middle East respiratory syndrome coronavirus (...</td>\n",
              "      <td>Middle East respiratory syndrome coronavirus (...</td>\n",
              "      <td>Superior immune responses induced by intranasa...</td>\n",
              "      <td>Kim, Myung Hee; Kim, Hyun Jik; Chang, Jun</td>\n",
              "      <td>PLoS One</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c629fbb3-dbf8-49ac-bf25-24892851b42b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c629fbb3-dbf8-49ac-bf25-24892851b42b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c629fbb3-dbf8-49ac-bf25-24892851b42b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Extracting the embeddings using the title, abstract and date (Execution time is equal to 30 minutes)\n"
      ],
      "metadata": {
        "id": "7g3VCwi7dkI4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import torch\n",
        "from transformers import AutoTokenizer, AutoModel\n",
        "\n",
        "# Load the metadata\n",
        "meta_df = meta_df[['paper_id','abstract','body_text','title','authors','journal','url','date']].reset_index(drop=True)\n",
        "\n",
        "# Load the SPECTER model and tokenizer\n",
        "model_name = \"allenai/specter\"\n",
        "tokenizer = AutoTokenizer.from_pretrained(model_name)\n",
        "model = AutoModel.from_pretrained(model_name)\n",
        "\n",
        "# Compute the embeddings in batches\n",
        "batch_size = 12\n",
        "num_batches = (len(meta_df) + batch_size - 1) // batch_size\n",
        "\n",
        "embeddings = []\n",
        "for i in range(num_batches):\n",
        "    start_idx = i * batch_size\n",
        "    end_idx = min((i + 1) * batch_size, len(meta_df))\n",
        "    batch = meta_df.iloc[start_idx:end_idx]\n",
        "    inputs = list(batch.apply(lambda row: f\"{row['title']} {row['abstract']} {row['date']}\", axis=1))\n",
        "\n",
        "    # Tokenize the inputs and pad the sequences\n",
        "    encoded_inputs = tokenizer(inputs, padding=True, truncation=True, max_length=512, return_tensors='pt')\n",
        "    padded_inputs = {k: v.to(model.device) for k, v in encoded_inputs.items()}\n",
        "\n",
        "    # Compute the embeddings for the batch\n",
        "    with torch.no_grad():\n",
        "        outputs = model(**padded_inputs)\n",
        "        batch_embeddings = outputs.last_hidden_state[:, 0, :].cpu().numpy()\n",
        "\n",
        "    embeddings.append(batch_embeddings)\n",
        "\n",
        "# Concatenate the embeddings for all batches\n",
        "embeddings = np.concatenate(embeddings, axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 177,
          "referenced_widgets": [
            "83c9c7885b0a44ceb897b7543cbc53bd",
            "1d2562899ea245cc8f4fabe387c3ca74",
            "6df2ac08dfeb4029a04b4a28a489cecd",
            "8020c21e836b4983b5b0c0a06487b021",
            "96278756e86e46429f9ca3296180a0ee",
            "d59298a381cf4e7391478e282be4a830",
            "9e69f46f3fee4491a59aabda33d7b2c9",
            "d7ad21fc18b749beaf0d194d0770b3f2",
            "18659943aae74b7788c1f11af824f79a",
            "86882eb3256b4f719f864d9a5abe15f9",
            "6de81d7533c942109124d117f8ee09f1",
            "e6966a682027406fba619131929ea705",
            "1cc27991a5d94528a9de649205ee8438",
            "ee432c35914e4eb1af08dc33232f9367",
            "030141e7421546e2a80a606403649b54",
            "6c0e08a796c94c00a3399b3fca6c7088",
            "da54f540e61a4728a9636c5f0e990712",
            "e80d4b09469e436ab7e706231b9b5551",
            "f654a750f81e48ad8c75f0b598b1dce9",
            "729964e28b964fadbbe8e3f091656b8e",
            "c872585e8a054da8bd39c6ac6c030931",
            "98af7d174c554dbebae6c2d1be95010e",
            "61b12c7238a6492b865b6e4183dba4d8",
            "4a86c3a1dfa54afb810c7b8079749dd9",
            "ba1446ad6f9e41acb37808710febf15c",
            "847b46749c514c5287b2318b5bdd8da0",
            "f303ccd81f9242e6abf2371c3c6012bf",
            "933cae9e183f4d9899117e0c13818357",
            "af30767e5ead4179aa4289ac548fab12",
            "3d6f12a886814dbbadaf881e7fe2d3d4",
            "cc859872e9cd48648ff3edc4629fbe5f",
            "030054667c364e66b76679bdafbede45",
            "7b777b1d536b4ab2aabf69cc00c14013",
            "1e889f4f070d4e84b4560729afa8852b",
            "48909c358155482685e3b3c2ce076cbc",
            "aebb6f696f064b09972c24974a19e177",
            "e46935c5fcb045698f41e81dcb7f3a51",
            "8ac9444e711c47f786251aeaa80a7003",
            "b743684fea264a8fb0de4f67ef26715d",
            "bf889913e95c4195bf146b4e2da5d72b",
            "0be8a9c5a2da4859b1ee0a2167ffdbbf",
            "9d79fd61c4e940d1ae25d43af1b320a1",
            "e38c1f8ad6a24faea12fe12f733b85af",
            "6881a0a1938c4d89925f23e8593422e4",
            "923064b09d1b433faa2f96f7f8ec49e7",
            "cf8c36244b8944c8958f6499ab26cc67",
            "a2b8899b32cb4e09b5cb4cca2edf8cb2",
            "aff8f42f3d844fa298c5def5319bc554",
            "2362105e614541b48070885132276d5a",
            "3414a82b15214463a7487505fa251d8d",
            "66c6b4526a3a4bb1805643b5a4d6df72",
            "02d888dcbd4b447db97b3939f4048d4d",
            "e36fd1453c364c259faf0bcc0e1fff4d",
            "1eadc74befd74c7b8d5d6a1159de5892",
            "ebdd0e6791d84a808b919a3ff5598cac"
          ]
        },
        "id": "ISBg50hPxKqX",
        "outputId": "47095699-003c-45e2-c851-5d553c38493e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading (…)okenizer_config.json:   0%|          | 0.00/321 [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "83c9c7885b0a44ceb897b7543cbc53bd"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading (…)lve/main/config.json:   0%|          | 0.00/612 [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e6966a682027406fba619131929ea705"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading (…)solve/main/vocab.txt:   0%|          | 0.00/222k [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "61b12c7238a6492b865b6e4183dba4d8"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading (…)cial_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1e889f4f070d4e84b4560729afa8852b"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Downloading pytorch_model.bin:   0%|          | 0.00/440M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "923064b09d1b433faa2f96f7f8ec49e7"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "embeddings"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pTpsfbnNB-QL",
        "outputId": "f84915c0-9f3b-4791-9f7e-50d9fb209ab5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 6.2884194e-01,  8.6629920e-02, -2.0348334e-01, ...,\n",
              "         3.3251554e-01, -1.0272917e-01, -1.3691731e-01],\n",
              "       [-2.5850275e-01,  2.9757357e-01, -3.5208118e-01, ...,\n",
              "         4.7582990e-01, -4.2571746e-02, -1.5900584e-01],\n",
              "       [ 3.1789961e-01,  5.1353139e-01,  1.2792297e-01, ...,\n",
              "         7.2934878e-01, -6.3490462e-01,  3.0627993e-01],\n",
              "       ...,\n",
              "       [ 2.5952652e-01,  7.0048638e-02,  1.0077611e+00, ...,\n",
              "         1.7654210e-01, -1.1048018e+00, -1.2499884e-02],\n",
              "       [ 8.0349037e-06,  4.8250586e-01,  6.4897925e-02, ...,\n",
              "        -4.2106271e-01,  1.4868814e-01, -3.3789641e-01],\n",
              "       [-1.1223995e-01,  2.4682702e-01, -2.2203940e-01, ...,\n",
              "         7.5175190e-01, -5.3344619e-01, -1.5547441e-01]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Defining the label used for classification"
      ],
      "metadata": {
        "id": "SNYPOvYvyB-k"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def get_label(row):\n",
        "    if \"COVID-19\" in row['abstract'] or \"coronavirus\" in row['abstract'] or \"SARS-CoV-2\" in row['abstract']:\n",
        "        return \"relevant\"\n",
        "    else:\n",
        "        return \"irrelevant\"\n",
        "\n",
        "meta_df['label'] = meta_df.apply(get_label, axis=1)"
      ],
      "metadata": {
        "id": "X8vL2MMIGcP4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "meta_df.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "17Jkjeo1Gfvz",
        "outputId": "2f8f5ff0-8c3e-4179-c4fe-d2f17c0c0887"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                   paper_id  \\\n",
              "0  7037460cc980744603573744bf370ee8f49a4ffe   \n",
              "1  46bf124930f3ef18bc9dd2d4ae356a45d3bae461   \n",
              "2  983df610328c1e73e3c12546d42a14d520844f9b   \n",
              "3  4bbb0c59babc718f67953fae032dad6ae0d7aeb1   \n",
              "4  3061f05203159384dfbb2fd9b1d9a1ca7b98c8a6   \n",
              "\n",
              "                                            abstract  \\\n",
              "0  Objectives The aim of this study was to determ...   \n",
              "1  Objective: This study presents a preliminary r...   \n",
              "2  How to cite: Bhuiyan ZA, Ali MZ, Moula MM, Bar...   \n",
              "3  Genome Detective is a web-based, user-friendly...   \n",
              "4  Introduction: The earthquake is one of the mos...   \n",
              "\n",
              "                                           body_text  \\\n",
              "0  Drugs that inhibit virus replication have beco...   \n",
              "1  https://doi.org/10.3348/kjr.2020.0132 kjronlin...   \n",
              "2  The poultry industry is an important subsector...   \n",
              "3  We are currently faced with a potential global...   \n",
              "4  Over the past 10 years, natural disasters have...   \n",
              "\n",
              "                                               title  \\\n",
              "0  Efficacy and safety of the nucleoside analog G...   \n",
              "1  Chest Radiographic and CT Findings of the 2019...   \n",
              "2  Seroprevalence of major avian respiratory dise...   \n",
              "3  Genome Detective Coronavirus Typing Tool for r...   \n",
              "4  Iranian Emergency Medical Service Response in ...   \n",
              "\n",
              "                                             authors  \\\n",
              "0  Pedersen, Niels C; Perron, Michel; Bannasch, M...   \n",
              "1  Yoon, Soon Ho; Lee, Kyung Hee; Kim, Jin Yong; ...   \n",
              "2  Bhuiyan, Zafar Ahmed; Ali, Md Zulfekar; Moula,...   \n",
              "3  Cleemput, S.; Dumon, W.; Fonseca, V.; Karim, W...   \n",
              "4  Saberian, Peyman; Kolivand, Pir-Hossein; Hasan...   \n",
              "\n",
              "                            journal  \\\n",
              "0                 J Feline Med Surg   \n",
              "1                   Korean J Radiol   \n",
              "2                J Adv Vet Anim Res   \n",
              "3  Bioinformatics (Oxford, England)   \n",
              "4                   Adv J Emerg Med   \n",
              "\n",
              "                                                 url      date       label  \n",
              "0  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  irrelevant  \n",
              "1              https://doi.org/10.3348/kjr.2020.0132      2019    relevant  \n",
              "2  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...      2019  irrelevant  \n",
              "3     https://doi.org/10.1093/bioinformatics/btaa145      2019    relevant  \n",
              "4  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...  2019;3(2  irrelevant  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-21acdae5-e111-49c1-a371-edc086b24f36\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>paper_id</th>\n",
              "      <th>abstract</th>\n",
              "      <th>body_text</th>\n",
              "      <th>title</th>\n",
              "      <th>authors</th>\n",
              "      <th>journal</th>\n",
              "      <th>url</th>\n",
              "      <th>date</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7037460cc980744603573744bf370ee8f49a4ffe</td>\n",
              "      <td>Objectives The aim of this study was to determ...</td>\n",
              "      <td>Drugs that inhibit virus replication have beco...</td>\n",
              "      <td>Efficacy and safety of the nucleoside analog G...</td>\n",
              "      <td>Pedersen, Niels C; Perron, Michel; Bannasch, M...</td>\n",
              "      <td>J Feline Med Surg</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "      <td>irrelevant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>46bf124930f3ef18bc9dd2d4ae356a45d3bae461</td>\n",
              "      <td>Objective: This study presents a preliminary r...</td>\n",
              "      <td>https://doi.org/10.3348/kjr.2020.0132 kjronlin...</td>\n",
              "      <td>Chest Radiographic and CT Findings of the 2019...</td>\n",
              "      <td>Yoon, Soon Ho; Lee, Kyung Hee; Kim, Jin Yong; ...</td>\n",
              "      <td>Korean J Radiol</td>\n",
              "      <td>https://doi.org/10.3348/kjr.2020.0132</td>\n",
              "      <td>2019</td>\n",
              "      <td>relevant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>983df610328c1e73e3c12546d42a14d520844f9b</td>\n",
              "      <td>How to cite: Bhuiyan ZA, Ali MZ, Moula MM, Bar...</td>\n",
              "      <td>The poultry industry is an important subsector...</td>\n",
              "      <td>Seroprevalence of major avian respiratory dise...</td>\n",
              "      <td>Bhuiyan, Zafar Ahmed; Ali, Md Zulfekar; Moula,...</td>\n",
              "      <td>J Adv Vet Anim Res</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019</td>\n",
              "      <td>irrelevant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4bbb0c59babc718f67953fae032dad6ae0d7aeb1</td>\n",
              "      <td>Genome Detective is a web-based, user-friendly...</td>\n",
              "      <td>We are currently faced with a potential global...</td>\n",
              "      <td>Genome Detective Coronavirus Typing Tool for r...</td>\n",
              "      <td>Cleemput, S.; Dumon, W.; Fonseca, V.; Karim, W...</td>\n",
              "      <td>Bioinformatics (Oxford, England)</td>\n",
              "      <td>https://doi.org/10.1093/bioinformatics/btaa145</td>\n",
              "      <td>2019</td>\n",
              "      <td>relevant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3061f05203159384dfbb2fd9b1d9a1ca7b98c8a6</td>\n",
              "      <td>Introduction: The earthquake is one of the mos...</td>\n",
              "      <td>Over the past 10 years, natural disasters have...</td>\n",
              "      <td>Iranian Emergency Medical Service Response in ...</td>\n",
              "      <td>Saberian, Peyman; Kolivand, Pir-Hossein; Hasan...</td>\n",
              "      <td>Adv J Emerg Med</td>\n",
              "      <td>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6...</td>\n",
              "      <td>2019;3(2</td>\n",
              "      <td>irrelevant</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21acdae5-e111-49c1-a371-edc086b24f36')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-21acdae5-e111-49c1-a371-edc086b24f36 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-21acdae5-e111-49c1-a371-edc086b24f36');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Classification task"
      ],
      "metadata": {
        "id": "hquUknUWyGSJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import classification_report\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(embeddings, meta_df['label'], test_size=0.2, random_state=42)\n",
        "\n",
        "# Train a logistic regression classifier\n",
        "clf = LogisticRegression(random_state=42, max_iter=1000)\n",
        "clf.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions on the test set\n",
        "y_pred = clf.predict(X_test)\n",
        "\n",
        "# Evaluate the performance of the classifier\n",
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vmbd9DJ2FFYH",
        "outputId": "8e7010ed-1e60-4ca3-b616-f53884f86c8d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "  irrelevant       0.88      0.85      0.86        33\n",
            "    relevant       0.94      0.95      0.94        77\n",
            "\n",
            "    accuracy                           0.92       110\n",
            "   macro avg       0.91      0.90      0.90       110\n",
            "weighted avg       0.92      0.92      0.92       110\n",
            "\n"
          ]
        }
      ]
    }
  ]
}
